#!/bin/bash

# USAGE: provision/prepare-provision

state_file="${STATE_FILE:-./terraform.tfstate}"

fail() {
  echo "$*" >&2
  exit 1
}

cp -R provision.sh provision/provision.sh
(( "$?" == "0" )) ||
  fail "Could not copy the original provision.sh file to the provision folder."

assure_string_in_file() {
  assurefilename=$1
  assuresearchString=$2
  assurereplaceString=$3

  re="s#^.*$assuresearchString.*#$assurereplaceString#"

  #Detect OSX v other linux for sed ''
  if [[ "$(uname -s)" == "Darwin" ]]; then
    sed -i '' "${re}" "$assurefilename"
    (( "$?" == "0" )) ||
      fail "Could not execute execute sed command replace $assuresearchString with $assurereplaceString in file $assurefilename, terminating install."
  else
    sed -i "${re}" "$assurefilename"
    (( "$?" == "0" )) ||
      fail "Could not execute execute sed command replace $assuresearchString with $assurereplaceString in file $assurefilename, terminating install."
  fi

}

filename_provision="provision/provision.sh"
assure_string_in_file $filename_provision 'OS_USERNAME=${1}' "OS_USERNAME=\"$(terraform output -state="${state_file}" username)\""
assure_string_in_file $filename_provision 'OS_API_KEY=${2}' "OS_API_KEY=\"$(terraform output -state="${state_file}" password)\""
assure_string_in_file $filename_provision 'OS_TENANT=${3}' "OS_TENANT=\"$(terraform output -state="${state_file}" tenant_name)\""
assure_string_in_file $filename_provision 'OS_AUTH_URL=${4}' "OS_AUTH_URL=\"$(terraform output -state="${state_file}" auth_url)\""
assure_string_in_file $filename_provision 'OS_REGION=${5}' "OS_REGION=\"$(terraform output -state="${state_file}" region)\""
assure_string_in_file $filename_provision 'CF_SUBNET1=${6}' "CF_SUBNET1=\"$(terraform output -state="${state_file}" internal_network_id)\""
assure_string_in_file $filename_provision 'IPMASK=${7}' "IPMASK=\"$(terraform output -state="${state_file}" network)\""
assure_string_in_file $filename_provision 'CF_IP=${8}' "CF_IP=\"$(terraform output -state="${state_file}" cf_fp_address)\""
assure_string_in_file $filename_provision 'CF_SIZE=${9}' "CF_SIZE=\"$(terraform output -state="${state_file}" cf_size)\""
assure_string_in_file $filename_provision 'CF_BOSHWORKSPACE_VERSION=${10}' "CF_BOSHWORKSPACE_VERSION=\"$(terraform output -state="${state_file}" cf_boshworkspace_version)\""
assure_string_in_file $filename_provision 'CF_SG=${15}' "CF_SG=\"$(terraform output -state="${state_file}" cf_sg)\""
assure_string_in_file $filename_provision 'CF_DOMAIN=${11}' "CF_DOMAIN=\"$(terraform output -state="${state_file}" cf_domain)\""
assure_string_in_file $filename_provision 'DOCKER_SUBNET=${12}' "DOCKER_SUBNET=\"$(terraform output -state="${state_file}" docker_subnet)\""
assure_string_in_file $filename_provision 'INSTALL_DOCKER=${13}' "INSTALL_DOCKER=\"$(terraform output -state="${state_file}" install_docker_services)\""
assure_string_in_file $filename_provision 'LB_SUBNET1=${14}' "LB_SUBNET1=\"$(terraform output -state="${state_file}" lb_net)\""

for job in BACKBONE API SERVICES HEALTH RUNNER; do
	for zone in Z1 Z2; do
		uc_job_name=${job}_${zone}_COUNT
		lc_job_name=$(echo $uc_job_name | tr '[:upper:]' '[:lower:]')
		assure_string_in_file $filename_provision "${uc_job_name}=COUNT" "${uc_job_name}=\"$(terraform output -state="${state_file}" ${lc_job_name})\""
	done
done
